/*  https://open.kattis.com/problems/romanholidays  */

use std::io::BufRead;
use std::collections::HashMap;

fn main() {

    let     stdin  = std::io::stdin();
    let mut lines  = stdin.lock().lines(); 

    // skip the first line
    lines.next();

    let before_m = get_before_m();
    let after_m  = get_after_m();

    for line in lines {
        let number = line.unwrap().parse().unwrap();

        match do_case(number, &before_m, &after_m) {
            Result::FromStart(offset) => println!( "{}", offset),
            Result::FromEnd(offset)   => println!("-{}", offset)
        }
    }
}

fn do_case(number:    u32,
           before_m: &HashMap<String, usize>,
           after_m:  &HashMap<String, usize>) -> Result {

    let thousands = (number / 1000) as usize;
    let remainder = (number % 1000) as u32;

    // if we have an even multiple of 1000, a basic calculation suffices instead of a lookup
    if remainder == 0 {
        return Result::FromStart(before_m.len() * thousands
                                                + thousands)
    }
    
    let roman = roman(remainder);
    let first = roman.chars().next().unwrap();

    // if the first non-M letter is a letter "less" than M (alphabetically less)
    if "CDIL".contains(first) {
        let offset = *before_m.get(&roman).unwrap();

        Result::FromStart(thousands * (before_m.len() + 1) + offset + 1)
    } 
    
    // the first non-M letter is greater than M
    else {
        let offset = *after_m.get(&roman).unwrap();

        Result::FromEnd(thousands * after_m.len() + offset + 1)
    }

}

#[derive(Debug, PartialEq)]
enum Result {
    FromStart(usize),
    FromEnd(usize)
}

fn roman(mut decimal: u32) -> String {

    let table = vec![
       (1000, "M"),
       (900, "CM"),
       (500, "D"),
       (400, "CD"),
       (100, "C"),
       (90, "XC"),
       (50, "L"),
       (40, "XL"),
       (10, "X"),
       (9, "IX"),
       (5, "V"),
       (4, "IV"),
       (1, "I")
    ];

    let mut roman = String::new();

    while decimal > 0 {        
        for (level, numerals) in table.iter() {
            if decimal >= *level {
                roman.push_str(numerals);
                decimal -= level;                
                break;
            }
        }                
    }

    roman
}


#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_do_case()
    {
        let before_m = get_before_m();
        let after_m  = get_after_m();

        // offset from start of ordering
        assert_eq!(do_case(100, &before_m, &after_m), Result::FromStart(1));        // C
        assert_eq!(do_case(200, &before_m, &after_m), Result::FromStart(2));        // CC
        assert_eq!(do_case(101, &before_m, &after_m), Result::FromStart(302));      // CI
        assert_eq!(do_case(102, &before_m, &after_m), Result::FromStart(303));      // CII
        assert_eq!(do_case(188, &before_m, &after_m), Result::FromStart(346));      // CLXXXVIII
        assert_eq!(do_case(900, &before_m, &after_m), Result::FromStart(346+1));    // CM
        assert_eq!(do_case(901, &before_m, &after_m), Result::FromStart(346+2));    // CMI
        assert_eq!(do_case(500, &before_m, &after_m), Result::FromStart(501));      // D
        assert_eq!(do_case(1  , &before_m, &after_m), Result::FromStart(901));      // I
        assert_eq!(do_case(2  , &before_m, &after_m), Result::FromStart(902));      // II
        assert_eq!(do_case(87 , &before_m, &after_m), Result::FromStart(944));      // LXXXVII
        assert_eq!(do_case(88 , &before_m, &after_m), Result::FromStart(945));      // LXXXVIII

        // M
        assert_eq!(do_case(1000, &before_m, &after_m), Result::FromStart(before_m.len() + 1));
        assert_eq!(do_case(1100, &before_m, &after_m), Result::FromStart(before_m.len() + 2)); // MC

        // MM
        assert_eq!(do_case(2000, &before_m, &after_m), Result::FromStart(before_m.len() + before_m.len() + 1 + 1));

        // offset from end of ordering
        assert_eq!(do_case(1037, &before_m, &after_m), Result::FromEnd(after_m.len() + 2));  // MXXXVII
        assert_eq!(do_case(1038, &before_m, &after_m), Result::FromEnd(after_m.len() + 1));  // MXXXVIII
        assert_eq!(do_case(5   , &before_m, &after_m), Result::FromEnd(after_m.len()    ));  // V
        assert_eq!(do_case(37  , &before_m, &after_m), Result::FromEnd(2));                  // XXXVII
        assert_eq!(do_case(38  , &before_m, &after_m), Result::FromEnd(1));                  // XXXVIII    
    }

    #[test]
    fn test_roman() {
        assert_eq!(roman(1), "I");
        assert_eq!(roman(2), "II");
        assert_eq!(roman(3), "III");
        assert_eq!(roman(4), "IV");
        assert_eq!(roman(5), "V");
        assert_eq!(roman(6), "VI");
        assert_eq!(roman(7), "VII");
        assert_eq!(roman(8), "VIII");
        assert_eq!(roman(9), "IX");
        assert_eq!(roman(10), "X");

        assert_eq!(roman(11), "XI");
        assert_eq!(roman(12), "XII");
        assert_eq!(roman(13), "XIII");
        assert_eq!(roman(14), "XIV");
        assert_eq!(roman(15), "XV");
        assert_eq!(roman(16), "XVI");
        assert_eq!(roman(17), "XVII");
        assert_eq!(roman(18), "XVIII");
        assert_eq!(roman(19), "XIX");
        assert_eq!(roman(20), "XX");

        assert_eq!(roman(50), "L");
        assert_eq!(roman(60), "LX");

        assert_eq!(roman(89), "LXXXIX");
        assert_eq!(roman(99), "XCIX");

        assert_eq!(roman(100), "C");
        assert_eq!(roman(200), "CC");
        assert_eq!(roman(300), "CCC");
        assert_eq!(roman(400), "CD");
        assert_eq!(roman(499), "CDXCIX");
        assert_eq!(roman(500), "D");

        assert_eq!(roman(900), "CM");
        assert_eq!(roman(1000), "M");
    }
}


/* Static data pre-generated to save the cost of sorting the lists of roman numbers from 1-999 */

fn get_before_m() -> HashMap<String, usize> {
    let before_m = vec![
        "C",
        "CC",
        "CCC",
        "CCCI",
        "CCCII",
        "CCCIII",
        "CCCIV",
        "CCCIX",
        "CCCL",
        "CCCLI",
        "CCCLII",
        "CCCLIII",
        "CCCLIV",
        "CCCLIX",
        "CCCLV",
        "CCCLVI",
        "CCCLVII",
        "CCCLVIII",
        "CCCLX",
        "CCCLXI",
        "CCCLXII",
        "CCCLXIII",
        "CCCLXIV",
        "CCCLXIX",
        "CCCLXV",
        "CCCLXVI",
        "CCCLXVII",
        "CCCLXVIII",
        "CCCLXX",
        "CCCLXXI",
        "CCCLXXII",
        "CCCLXXIII",
        "CCCLXXIV",
        "CCCLXXIX",
        "CCCLXXV",
        "CCCLXXVI",
        "CCCLXXVII",
        "CCCLXXVIII",
        "CCCLXXX",
        "CCCLXXXI",
        "CCCLXXXII",
        "CCCLXXXIII",
        "CCCLXXXIV",
        "CCCLXXXIX",
        "CCCLXXXV",
        "CCCLXXXVI",
        "CCCLXXXVII",
        "CCCLXXXVIII",
        "CCCV",
        "CCCVI",
        "CCCVII",
        "CCCVIII",
        "CCCX",
        "CCCXC",
        "CCCXCI",
        "CCCXCII",
        "CCCXCIII",
        "CCCXCIV",
        "CCCXCIX",
        "CCCXCV",
        "CCCXCVI",
        "CCCXCVII",
        "CCCXCVIII",
        "CCCXI",
        "CCCXII",
        "CCCXIII",
        "CCCXIV",
        "CCCXIX",
        "CCCXL",
        "CCCXLI",
        "CCCXLII",
        "CCCXLIII",
        "CCCXLIV",
        "CCCXLIX",
        "CCCXLV",
        "CCCXLVI",
        "CCCXLVII",
        "CCCXLVIII",
        "CCCXV",
        "CCCXVI",
        "CCCXVII",
        "CCCXVIII",
        "CCCXX",
        "CCCXXI",
        "CCCXXII",
        "CCCXXIII",
        "CCCXXIV",
        "CCCXXIX",
        "CCCXXV",
        "CCCXXVI",
        "CCCXXVII",
        "CCCXXVIII",
        "CCCXXX",
        "CCCXXXI",
        "CCCXXXII",
        "CCCXXXIII",
        "CCCXXXIV",
        "CCCXXXIX",
        "CCCXXXV",
        "CCCXXXVI",
        "CCCXXXVII",
        "CCCXXXVIII",
        "CCI",
        "CCII",
        "CCIII",
        "CCIV",
        "CCIX",
        "CCL",
        "CCLI",
        "CCLII",
        "CCLIII",
        "CCLIV",
        "CCLIX",
        "CCLV",
        "CCLVI",
        "CCLVII",
        "CCLVIII",
        "CCLX",
        "CCLXI",
        "CCLXII",
        "CCLXIII",
        "CCLXIV",
        "CCLXIX",
        "CCLXV",
        "CCLXVI",
        "CCLXVII",
        "CCLXVIII",
        "CCLXX",
        "CCLXXI",
        "CCLXXII",
        "CCLXXIII",
        "CCLXXIV",
        "CCLXXIX",
        "CCLXXV",
        "CCLXXVI",
        "CCLXXVII",
        "CCLXXVIII",
        "CCLXXX",
        "CCLXXXI",
        "CCLXXXII",
        "CCLXXXIII",
        "CCLXXXIV",
        "CCLXXXIX",
        "CCLXXXV",
        "CCLXXXVI",
        "CCLXXXVII",
        "CCLXXXVIII",
        "CCV",
        "CCVI",
        "CCVII",
        "CCVIII",
        "CCX",
        "CCXC",
        "CCXCI",
        "CCXCII",
        "CCXCIII",
        "CCXCIV",
        "CCXCIX",
        "CCXCV",
        "CCXCVI",
        "CCXCVII",
        "CCXCVIII",
        "CCXI",
        "CCXII",
        "CCXIII",
        "CCXIV",
        "CCXIX",
        "CCXL",
        "CCXLI",
        "CCXLII",
        "CCXLIII",
        "CCXLIV",
        "CCXLIX",
        "CCXLV",
        "CCXLVI",
        "CCXLVII",
        "CCXLVIII",
        "CCXV",
        "CCXVI",
        "CCXVII",
        "CCXVIII",
        "CCXX",
        "CCXXI",
        "CCXXII",
        "CCXXIII",
        "CCXXIV",
        "CCXXIX",
        "CCXXV",
        "CCXXVI",
        "CCXXVII",
        "CCXXVIII",
        "CCXXX",
        "CCXXXI",
        "CCXXXII",
        "CCXXXIII",
        "CCXXXIV",
        "CCXXXIX",
        "CCXXXV",
        "CCXXXVI",
        "CCXXXVII",
        "CCXXXVIII",
        "CD",
        "CDI",
        "CDII",
        "CDIII",
        "CDIV",
        "CDIX",
        "CDL",
        "CDLI",
        "CDLII",
        "CDLIII",
        "CDLIV",
        "CDLIX",
        "CDLV",
        "CDLVI",
        "CDLVII",
        "CDLVIII",
        "CDLX",
        "CDLXI",
        "CDLXII",
        "CDLXIII",
        "CDLXIV",
        "CDLXIX",
        "CDLXV",
        "CDLXVI",
        "CDLXVII",
        "CDLXVIII",
        "CDLXX",
        "CDLXXI",
        "CDLXXII",
        "CDLXXIII",
        "CDLXXIV",
        "CDLXXIX",
        "CDLXXV",
        "CDLXXVI",
        "CDLXXVII",
        "CDLXXVIII",
        "CDLXXX",
        "CDLXXXI",
        "CDLXXXII",
        "CDLXXXIII",
        "CDLXXXIV",
        "CDLXXXIX",
        "CDLXXXV",
        "CDLXXXVI",
        "CDLXXXVII",
        "CDLXXXVIII",
        "CDV",
        "CDVI",
        "CDVII",
        "CDVIII",
        "CDX",
        "CDXC",
        "CDXCI",
        "CDXCII",
        "CDXCIII",
        "CDXCIV",
        "CDXCIX",
        "CDXCV",
        "CDXCVI",
        "CDXCVII",
        "CDXCVIII",
        "CDXI",
        "CDXII",
        "CDXIII",
        "CDXIV",
        "CDXIX",
        "CDXL",
        "CDXLI",
        "CDXLII",
        "CDXLIII",
        "CDXLIV",
        "CDXLIX",
        "CDXLV",
        "CDXLVI",
        "CDXLVII",
        "CDXLVIII",
        "CDXV",
        "CDXVI",
        "CDXVII",
        "CDXVIII",
        "CDXX",
        "CDXXI",
        "CDXXII",
        "CDXXIII",
        "CDXXIV",
        "CDXXIX",
        "CDXXV",
        "CDXXVI",
        "CDXXVII",
        "CDXXVIII",
        "CDXXX",
        "CDXXXI",
        "CDXXXII",
        "CDXXXIII",
        "CDXXXIV",
        "CDXXXIX",
        "CDXXXV",
        "CDXXXVI",
        "CDXXXVII",
        "CDXXXVIII",
        "CI",
        "CII",
        "CIII",
        "CIV",
        "CIX",
        "CL",
        "CLI",
        "CLII",
        "CLIII",
        "CLIV",
        "CLIX",
        "CLV",
        "CLVI",
        "CLVII",
        "CLVIII",
        "CLX",
        "CLXI",
        "CLXII",
        "CLXIII",
        "CLXIV",
        "CLXIX",
        "CLXV",
        "CLXVI",
        "CLXVII",
        "CLXVIII",
        "CLXX",
        "CLXXI",
        "CLXXII",
        "CLXXIII",
        "CLXXIV",
        "CLXXIX",
        "CLXXV",
        "CLXXVI",
        "CLXXVII",
        "CLXXVIII",
        "CLXXX",
        "CLXXXI",
        "CLXXXII",
        "CLXXXIII",
        "CLXXXIV",
        "CLXXXIX",
        "CLXXXV",
        "CLXXXVI",
        "CLXXXVII",
        "CLXXXVIII",
        "CM",
        "CMI",
        "CMII",
        "CMIII",
        "CMIV",
        "CMIX",
        "CML",
        "CMLI",
        "CMLII",
        "CMLIII",
        "CMLIV",
        "CMLIX",
        "CMLV",
        "CMLVI",
        "CMLVII",
        "CMLVIII",
        "CMLX",
        "CMLXI",
        "CMLXII",
        "CMLXIII",
        "CMLXIV",
        "CMLXIX",
        "CMLXV",
        "CMLXVI",
        "CMLXVII",
        "CMLXVIII",
        "CMLXX",
        "CMLXXI",
        "CMLXXII",
        "CMLXXIII",
        "CMLXXIV",
        "CMLXXIX",
        "CMLXXV",
        "CMLXXVI",
        "CMLXXVII",
        "CMLXXVIII",
        "CMLXXX",
        "CMLXXXI",
        "CMLXXXII",
        "CMLXXXIII",
        "CMLXXXIV",
        "CMLXXXIX",
        "CMLXXXV",
        "CMLXXXVI",
        "CMLXXXVII",
        "CMLXXXVIII",
        "CMV",
        "CMVI",
        "CMVII",
        "CMVIII",
        "CMX",
        "CMXC",
        "CMXCI",
        "CMXCII",
        "CMXCIII",
        "CMXCIV",
        "CMXCIX",
        "CMXCV",
        "CMXCVI",
        "CMXCVII",
        "CMXCVIII",
        "CMXI",
        "CMXII",
        "CMXIII",
        "CMXIV",
        "CMXIX",
        "CMXL",
        "CMXLI",
        "CMXLII",
        "CMXLIII",
        "CMXLIV",
        "CMXLIX",
        "CMXLV",
        "CMXLVI",
        "CMXLVII",
        "CMXLVIII",
        "CMXV",
        "CMXVI",
        "CMXVII",
        "CMXVIII",
        "CMXX",
        "CMXXI",
        "CMXXII",
        "CMXXIII",
        "CMXXIV",
        "CMXXIX",
        "CMXXV",
        "CMXXVI",
        "CMXXVII",
        "CMXXVIII",
        "CMXXX",
        "CMXXXI",
        "CMXXXII",
        "CMXXXIII",
        "CMXXXIV",
        "CMXXXIX",
        "CMXXXV",
        "CMXXXVI",
        "CMXXXVII",
        "CMXXXVIII",
        "CV",
        "CVI",
        "CVII",
        "CVIII",
        "CX",
        "CXC",
        "CXCI",
        "CXCII",
        "CXCIII",
        "CXCIV",
        "CXCIX",
        "CXCV",
        "CXCVI",
        "CXCVII",
        "CXCVIII",
        "CXI",
        "CXII",
        "CXIII",
        "CXIV",
        "CXIX",
        "CXL",
        "CXLI",
        "CXLII",
        "CXLIII",
        "CXLIV",
        "CXLIX",
        "CXLV",
        "CXLVI",
        "CXLVII",
        "CXLVIII",
        "CXV",
        "CXVI",
        "CXVII",
        "CXVIII",
        "CXX",
        "CXXI",
        "CXXII",
        "CXXIII",
        "CXXIV",
        "CXXIX",
        "CXXV",
        "CXXVI",
        "CXXVII",
        "CXXVIII",
        "CXXX",
        "CXXXI",
        "CXXXII",
        "CXXXIII",
        "CXXXIV",
        "CXXXIX",
        "CXXXV",
        "CXXXVI",
        "CXXXVII",
        "CXXXVIII",
        "D",
        "DC",
        "DCC",
        "DCCC",
        "DCCCI",
        "DCCCII",
        "DCCCIII",
        "DCCCIV",
        "DCCCIX",
        "DCCCL",
        "DCCCLI",
        "DCCCLII",
        "DCCCLIII",
        "DCCCLIV",
        "DCCCLIX",
        "DCCCLV",
        "DCCCLVI",
        "DCCCLVII",
        "DCCCLVIII",
        "DCCCLX",
        "DCCCLXI",
        "DCCCLXII",
        "DCCCLXIII",
        "DCCCLXIV",
        "DCCCLXIX",
        "DCCCLXV",
        "DCCCLXVI",
        "DCCCLXVII",
        "DCCCLXVIII",
        "DCCCLXX",
        "DCCCLXXI",
        "DCCCLXXII",
        "DCCCLXXIII",
        "DCCCLXXIV",
        "DCCCLXXIX",
        "DCCCLXXV",
        "DCCCLXXVI",
        "DCCCLXXVII",
        "DCCCLXXVIII",
        "DCCCLXXX",
        "DCCCLXXXI",
        "DCCCLXXXII",
        "DCCCLXXXIII",
        "DCCCLXXXIV",
        "DCCCLXXXIX",
        "DCCCLXXXV",
        "DCCCLXXXVI",
        "DCCCLXXXVII",
        "DCCCLXXXVIII",
        "DCCCV",
        "DCCCVI",
        "DCCCVII",
        "DCCCVIII",
        "DCCCX",
        "DCCCXC",
        "DCCCXCI",
        "DCCCXCII",
        "DCCCXCIII",
        "DCCCXCIV",
        "DCCCXCIX",
        "DCCCXCV",
        "DCCCXCVI",
        "DCCCXCVII",
        "DCCCXCVIII",
        "DCCCXI",
        "DCCCXII",
        "DCCCXIII",
        "DCCCXIV",
        "DCCCXIX",
        "DCCCXL",
        "DCCCXLI",
        "DCCCXLII",
        "DCCCXLIII",
        "DCCCXLIV",
        "DCCCXLIX",
        "DCCCXLV",
        "DCCCXLVI",
        "DCCCXLVII",
        "DCCCXLVIII",
        "DCCCXV",
        "DCCCXVI",
        "DCCCXVII",
        "DCCCXVIII",
        "DCCCXX",
        "DCCCXXI",
        "DCCCXXII",
        "DCCCXXIII",
        "DCCCXXIV",
        "DCCCXXIX",
        "DCCCXXV",
        "DCCCXXVI",
        "DCCCXXVII",
        "DCCCXXVIII",
        "DCCCXXX",
        "DCCCXXXI",
        "DCCCXXXII",
        "DCCCXXXIII",
        "DCCCXXXIV",
        "DCCCXXXIX",
        "DCCCXXXV",
        "DCCCXXXVI",
        "DCCCXXXVII",
        "DCCCXXXVIII",
        "DCCI",
        "DCCII",
        "DCCIII",
        "DCCIV",
        "DCCIX",
        "DCCL",
        "DCCLI",
        "DCCLII",
        "DCCLIII",
        "DCCLIV",
        "DCCLIX",
        "DCCLV",
        "DCCLVI",
        "DCCLVII",
        "DCCLVIII",
        "DCCLX",
        "DCCLXI",
        "DCCLXII",
        "DCCLXIII",
        "DCCLXIV",
        "DCCLXIX",
        "DCCLXV",
        "DCCLXVI",
        "DCCLXVII",
        "DCCLXVIII",
        "DCCLXX",
        "DCCLXXI",
        "DCCLXXII",
        "DCCLXXIII",
        "DCCLXXIV",
        "DCCLXXIX",
        "DCCLXXV",
        "DCCLXXVI",
        "DCCLXXVII",
        "DCCLXXVIII",
        "DCCLXXX",
        "DCCLXXXI",
        "DCCLXXXII",
        "DCCLXXXIII",
        "DCCLXXXIV",
        "DCCLXXXIX",
        "DCCLXXXV",
        "DCCLXXXVI",
        "DCCLXXXVII",
        "DCCLXXXVIII",
        "DCCV",
        "DCCVI",
        "DCCVII",
        "DCCVIII",
        "DCCX",
        "DCCXC",
        "DCCXCI",
        "DCCXCII",
        "DCCXCIII",
        "DCCXCIV",
        "DCCXCIX",
        "DCCXCV",
        "DCCXCVI",
        "DCCXCVII",
        "DCCXCVIII",
        "DCCXI",
        "DCCXII",
        "DCCXIII",
        "DCCXIV",
        "DCCXIX",
        "DCCXL",
        "DCCXLI",
        "DCCXLII",
        "DCCXLIII",
        "DCCXLIV",
        "DCCXLIX",
        "DCCXLV",
        "DCCXLVI",
        "DCCXLVII",
        "DCCXLVIII",
        "DCCXV",
        "DCCXVI",
        "DCCXVII",
        "DCCXVIII",
        "DCCXX",
        "DCCXXI",
        "DCCXXII",
        "DCCXXIII",
        "DCCXXIV",
        "DCCXXIX",
        "DCCXXV",
        "DCCXXVI",
        "DCCXXVII",
        "DCCXXVIII",
        "DCCXXX",
        "DCCXXXI",
        "DCCXXXII",
        "DCCXXXIII",
        "DCCXXXIV",
        "DCCXXXIX",
        "DCCXXXV",
        "DCCXXXVI",
        "DCCXXXVII",
        "DCCXXXVIII",
        "DCI",
        "DCII",
        "DCIII",
        "DCIV",
        "DCIX",
        "DCL",
        "DCLI",
        "DCLII",
        "DCLIII",
        "DCLIV",
        "DCLIX",
        "DCLV",
        "DCLVI",
        "DCLVII",
        "DCLVIII",
        "DCLX",
        "DCLXI",
        "DCLXII",
        "DCLXIII",
        "DCLXIV",
        "DCLXIX",
        "DCLXV",
        "DCLXVI",
        "DCLXVII",
        "DCLXVIII",
        "DCLXX",
        "DCLXXI",
        "DCLXXII",
        "DCLXXIII",
        "DCLXXIV",
        "DCLXXIX",
        "DCLXXV",
        "DCLXXVI",
        "DCLXXVII",
        "DCLXXVIII",
        "DCLXXX",
        "DCLXXXI",
        "DCLXXXII",
        "DCLXXXIII",
        "DCLXXXIV",
        "DCLXXXIX",
        "DCLXXXV",
        "DCLXXXVI",
        "DCLXXXVII",
        "DCLXXXVIII",
        "DCV",
        "DCVI",
        "DCVII",
        "DCVIII",
        "DCX",
        "DCXC",
        "DCXCI",
        "DCXCII",
        "DCXCIII",
        "DCXCIV",
        "DCXCIX",
        "DCXCV",
        "DCXCVI",
        "DCXCVII",
        "DCXCVIII",
        "DCXI",
        "DCXII",
        "DCXIII",
        "DCXIV",
        "DCXIX",
        "DCXL",
        "DCXLI",
        "DCXLII",
        "DCXLIII",
        "DCXLIV",
        "DCXLIX",
        "DCXLV",
        "DCXLVI",
        "DCXLVII",
        "DCXLVIII",
        "DCXV",
        "DCXVI",
        "DCXVII",
        "DCXVIII",
        "DCXX",
        "DCXXI",
        "DCXXII",
        "DCXXIII",
        "DCXXIV",
        "DCXXIX",
        "DCXXV",
        "DCXXVI",
        "DCXXVII",
        "DCXXVIII",
        "DCXXX",
        "DCXXXI",
        "DCXXXII",
        "DCXXXIII",
        "DCXXXIV",
        "DCXXXIX",
        "DCXXXV",
        "DCXXXVI",
        "DCXXXVII",
        "DCXXXVIII",
        "DI",
        "DII",
        "DIII",
        "DIV",
        "DIX",
        "DL",
        "DLI",
        "DLII",
        "DLIII",
        "DLIV",
        "DLIX",
        "DLV",
        "DLVI",
        "DLVII",
        "DLVIII",
        "DLX",
        "DLXI",
        "DLXII",
        "DLXIII",
        "DLXIV",
        "DLXIX",
        "DLXV",
        "DLXVI",
        "DLXVII",
        "DLXVIII",
        "DLXX",
        "DLXXI",
        "DLXXII",
        "DLXXIII",
        "DLXXIV",
        "DLXXIX",
        "DLXXV",
        "DLXXVI",
        "DLXXVII",
        "DLXXVIII",
        "DLXXX",
        "DLXXXI",
        "DLXXXII",
        "DLXXXIII",
        "DLXXXIV",
        "DLXXXIX",
        "DLXXXV",
        "DLXXXVI",
        "DLXXXVII",
        "DLXXXVIII",
        "DV",
        "DVI",
        "DVII",
        "DVIII",
        "DX",
        "DXC",
        "DXCI",
        "DXCII",
        "DXCIII",
        "DXCIV",
        "DXCIX",
        "DXCV",
        "DXCVI",
        "DXCVII",
        "DXCVIII",
        "DXI",
        "DXII",
        "DXIII",
        "DXIV",
        "DXIX",
        "DXL",
        "DXLI",
        "DXLII",
        "DXLIII",
        "DXLIV",
        "DXLIX",
        "DXLV",
        "DXLVI",
        "DXLVII",
        "DXLVIII",
        "DXV",
        "DXVI",
        "DXVII",
        "DXVIII",
        "DXX",
        "DXXI",
        "DXXII",
        "DXXIII",
        "DXXIV",
        "DXXIX",
        "DXXV",
        "DXXVI",
        "DXXVII",
        "DXXVIII",
        "DXXX",
        "DXXXI",
        "DXXXII",
        "DXXXIII",
        "DXXXIV",
        "DXXXIX",
        "DXXXV",
        "DXXXVI",
        "DXXXVII",
        "DXXXVIII",
        "I",
        "II",
        "III",
        "IV",
        "IX",
        "L",
        "LI",
        "LII",
        "LIII",
        "LIV",
        "LIX",
        "LV",
        "LVI",
        "LVII",
        "LVIII",
        "LX",
        "LXI",
        "LXII",
        "LXIII",
        "LXIV",
        "LXIX",
        "LXV",
        "LXVI",
        "LXVII",
        "LXVIII",
        "LXX",
        "LXXI",
        "LXXII",
        "LXXIII",
        "LXXIV",
        "LXXIX",
        "LXXV",
        "LXXVI",
        "LXXVII",
        "LXXVIII",
        "LXXX",
        "LXXXI",
        "LXXXII",
        "LXXXIII",
        "LXXXIV",
        "LXXXIX",
        "LXXXV",
        "LXXXVI",
        "LXXXVII",
        "LXXXVIII",
    ];

    map_with_index(before_m)    
}

fn get_after_m() -> HashMap<String, usize> {
    let after_m = vec![
        "XXXVIII",
        "XXXVII",
        "XXXVI",
        "XXXV",
        "XXXIX",
        "XXXIV",
        "XXXIII",
        "XXXII",
        "XXXI",
        "XXX",
        "XXVIII",
        "XXVII",
        "XXVI",
        "XXV",
        "XXIX",
        "XXIV",
        "XXIII",
        "XXII",
        "XXI",
        "XX",
        "XVIII",
        "XVII",
        "XVI",
        "XV",
        "XLVIII",
        "XLVII",
        "XLVI",
        "XLV",
        "XLIX",
        "XLIV",
        "XLIII",
        "XLII",
        "XLI",
        "XL",
        "XIX",
        "XIV",
        "XIII",
        "XII",
        "XI",
        "XCVIII",
        "XCVII",
        "XCVI",
        "XCV",
        "XCIX",
        "XCIV",
        "XCIII",
        "XCII",
        "XCI",
        "XC",
        "X",
        "VIII",
        "VII",
        "VI",
        "V",
    ];
    
    map_with_index(after_m)
}

fn map_with_index(numerals: Vec<&str>) -> HashMap<String, usize> {
    let mut map = HashMap::new();
    
    for (idx, val) in numerals.iter().enumerate() {
        map.insert((*val).to_owned(), idx);
    }

    map
}
